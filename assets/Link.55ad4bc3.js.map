{"version":3,"file":"Link.55ad4bc3.js","sources":["../../node_modules/classnames/index.js","../../src/constants/systemProps/typographySystemProps.ts","../../src/constants/systemProps/flexOrGridBoxSystemProps.ts","../../src/constants/systemProps/flexOrGridItemSystemProps.ts","../../src/helpers/stringHelper.ts","../../src/helpers/systemPropsHelper/classNameWithModifier.ts","../../src/helpers/systemPropsHelper/classNamesWithModifiers.ts","../../src/helpers/systemPropsHelper/spacingSystemClassName.ts","../../src/helpers/systemPropsHelper/colorSystemClassName.ts","../../src/helpers/systemPropsHelper/systemClassName.ts","../../src/components/Atoms/Link/Link.tsx"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import type { TypographySystemProps } from '@/types';\n\nexport const typographySystemProps: Record<keyof TypographySystemProps, string[]> = {\n  textAlign: ['text-align'],\n  weight: ['font-weight'],\n  italic: ['font-style'],\n  textDecoration: ['text-decoration'],\n  textTransform: ['text-transform'],\n};\n","import type { FlexOrGridBoxSystemProps } from '@/types';\n\nexport const flexOrGridBoxSystemProps: Record<keyof FlexOrGridBoxSystemProps, string[]> = {\n  alignItems: ['align-items'],\n  alignContent: ['align-content'],\n  justifyContent: ['justify-content'],\n  gap: ['gap'],\n  gapX: ['row-gap'],\n  gapY: ['col-gap'],\n};\n","import type { FlexOrGridBoxItemSystemProps } from '@/types';\n\nexport const flexOrGridItemSystemProps: Record<keyof FlexOrGridBoxItemSystemProps, string[]> = {\n  align: ['align-self'],\n};\n","export const kebabCase = (str: string): string =>\n  str\n    .replace(/([a-z])([A-Z])/g, '$1-$2')\n    .replace(/[\\s_]+/g, '-')\n    .toLowerCase();\n\nexport const pascalCase = (str: string): string =>\n  (str.match(/[a-zA-Z0-9]+/g) || []).map((w) => `${w.charAt(0).toUpperCase()}${w.slice(1)}`).join('');\n\nexport const capitalize = (str: string): string => `${str.charAt(0).toUpperCase()}${str.slice(1)}`;\n","import { kebabCase } from '../stringHelper';\n\nexport const classNameWithModifier = <TPropValue extends string | number | boolean>(options: {\n  className: string;\n  defaultModifier: string;\n  propValue?: TPropValue;\n}): string | undefined => {\n  if (options.propValue === undefined) {\n    return undefined;\n  }\n\n  if (typeof options.propValue !== 'boolean') {\n    const propValue = kebabCase(\n      typeof options.propValue === 'number' ? options.propValue.toString() : options.propValue\n    );\n\n    return `${options.className}-${propValue}@${options.defaultModifier}`;\n  }\n\n  return `${options.className}@${options.defaultModifier}`;\n};\n","import { classNameWithModifier } from '@/helpers/systemPropsHelper';\nimport { TypeWithModifierType } from '@/types';\n\nexport const classNamesWithModifiers = <\n  TModifierType extends string,\n  TPropValue extends string | number | boolean\n>(options: {\n  className: string;\n  defaultModifier?: string;\n  propValue?: TPropValue | TypeWithModifierType<TModifierType, TPropValue>;\n}): string[] => {\n  if ((options.propValue && ['string', 'number'].includes(typeof options.propValue)) || !options.propValue) {\n    const currentClassName = classNameWithModifier<TPropValue>({\n      className: options.className,\n      defaultModifier: options.defaultModifier || 'xs',\n      propValue: options.propValue as TPropValue,\n    });\n\n    return currentClassName ? [currentClassName] : [];\n  }\n\n  return Object.entries(options.propValue as TypeWithModifierType<TModifierType, TPropValue>).reduce<string[]>(\n    (currentClassNames, [modifierName, propValueByModifier]) => {\n      const currentClassName = classNameWithModifier<TPropValue>({\n        className: options.className,\n        defaultModifier: modifierName,\n        propValue: propValueByModifier as TPropValue,\n      });\n      if (currentClassName) {\n        currentClassNames.push(currentClassName);\n      }\n\n      return currentClassNames;\n    },\n    []\n  );\n};\n","import classNames from 'classnames';\n\nimport { spacingSystemProps } from '@/constants';\nimport { classNamesWithModifiers } from '@/helpers/systemPropsHelper';\nimport type { MediaQueryType, SpacingSystemProps, SpacingType } from '@/types';\n\nexport const spacingSystemClassName = <TProps extends SpacingSystemProps>(props: TProps): string =>\n  classNames(\n    Object.entries(props)\n      .filter(([propName]) => Object.keys(spacingSystemProps).includes(propName))\n      .reduce<string[]>((currentClassNames, [propName, propValue]) => {\n        currentClassNames.push(\n          ...classNamesWithModifiers<MediaQueryType, SpacingType>({\n            className: propName,\n            propValue,\n          })\n        );\n\n        return currentClassNames;\n      }, [])\n  );\n","import classNames from 'classnames';\n\nimport type { ColorSystemProps } from '@/types';\n\nexport const colorSystemClassName = <TProps extends ColorSystemProps>(props: TProps): string =>\n  classNames({\n    [`bg-${props.bg}`]: props.bg,\n    [`color-${props.color}`]: props.color,\n  });\n","import classNames from 'classnames';\n\nimport { colorSystemClassName, spacingSystemClassName } from '@/helpers/systemPropsHelper';\nimport { SystemProps } from '@/types';\n\nexport const systemClassName = <TProps extends SystemProps = SystemProps>(props: TProps): string =>\n  classNames(spacingSystemClassName(props), colorSystemClassName(props));\n","import './Link.scss';\n\nimport classNames from 'classnames';\nimport * as React from 'react';\n\nimport { systemClassName } from '@/helpers/systemPropsHelper';\n\nimport { PolymorphicProps, SpacingSystemProps, TypographySystemProps } from '@/types';\n\ntype LinkElementType = keyof Pick<JSX.IntrinsicElements, 'a' | 'button'> | React.ForwardRefExoticComponent<any>; // eslint-disable-line @typescript-eslint/no-explicit-any\n\nexport type LinkProps<C extends LinkElementType = LinkElementType> = {\n  neutral?: boolean;\n  children?: React.ReactNode;\n} & PolymorphicProps<C> &\n  SpacingSystemProps &\n  TypographySystemProps;\n\nexport const Link = <C extends LinkElementType = 'a'>({\n  as,\n  neutral,\n  children,\n  ...nativeProps\n}: LinkProps<C>): ReturnType<React.FC<C>> =>\n  React.createElement(\n    as || 'a',\n    {\n      className: classNames('link', { [`link--neutral`]: neutral }, systemClassName<SpacingSystemProps>(nativeProps)),\n    },\n    children\n  );\n"],"names":["hasOwn","classNames","classes","i","arg","argType","inner","key","__name","module","typographySystemProps","flexOrGridBoxSystemProps","flexOrGridItemSystemProps","kebabCase","str","capitalize","classNameWithModifier","options","propValue","classNamesWithModifiers","currentClassName","currentClassNames","modifierName","propValueByModifier","spacingSystemClassName","props","propName","spacingSystemProps","colorSystemClassName","systemClassName","Link","as","neutral","children","React.createElement"],"mappings":"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"}
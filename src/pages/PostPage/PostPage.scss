@use 'sass:map';
@use '@/styles/abstracts' as *;

$heading-markup-config: map-get-strict($token-variables, 'typography', 'heading-markup');
$headings-by-compoent-variant-name: (
    's': 'h5',
    'm': 'h4',
    'l': 'h3',
    'xl': 'h2',
);

@mixin heading($config) {
  $base-properties: ();

  @if map.get($config, 'base') {
    $base-properties: map.get($config, 'base');
  }

  @each $component-variant-name, $properties in $config {
    @if $component-variant-name != 'base' {
      #{map-get-strict($headings-by-compoent-variant-name, $component-variant-name)} {
        @each $property-name, $property-value in map.merge($base-properties, $properties) {
          #{$property-name}: #{$property-value};
        }
      }
    }
  }
}

.post-page {
  --height-cover-post-page: 160px;

  &__cover {
    object-fit: cover;
    width: 100%;
    height: var(--height-cover-post-page);
    border-radius: #{map-get-strict($token-variables, 'radius', 'xs')};

    @include create-media-queries('md') {
      --height-cover-post-page: 330px;
    }
  }

  &__content {
    @include heading($heading-markup-config);

    p, ul, ol, blockquote {
      margin: 0 0 #{map-get-strict($token-variables, 'spacing', 'xs')} 0;
    }

    pre {
      font-size: #{map-get-strict($token-variables, 'typography', 'text', 'xs', 'font-size')};
    }

    figure {
      text-align: center;
    }

    img {
      display: block;
      max-width: 100%;
      margin: #{map-get-strict($token-variables, 'spacing', 'xs')} auto,
    }

    blockquote {
      padding: 0 #{map-get-strict($token-variables, 'spacing', 'xxl')};
      font-family: Georgia, #{map-get-strict($token-variables, 'font-family', 'blockquote')};
      font-size: #{map-get-strict($token-variables, 'typography', 'text', 'm', 'font-size')};
      font-style: italic;
      line-height: #{map-get-strict($token-variables, 'line-height', 'base')};

      &::before, &::after {
        content: "â€œ";
        display: block;
        height: 3rem;
        line-height: 6rem;
        font-size: 8rem;
        font-weight: #{map-get-strict($token-variables, 'font-weight', 'medium')};
        color: #{map-get-strict($token-variables, 'color', 'primary')};
      }

      &::before {
        margin-left: calc(#{map-get-strict($token-variables, 'spacing', 'xxl')} * -1);
      }

      &::after {
        margin-right: calc(#{map-get-strict($token-variables, 'spacing', 'xxl')} * -1);
        transform: rotate(180deg);
      }
    }

    table {
      text-align: left;
      width: 100%;

      thead {
        background-color: map-get-strict($token-variables, 'color', 'primary');
        color: map-get-strict($token-variables, 'color', 'secondary');
      }

      th, td {
        padding: map-get-strict($token-variables, 'spacing', 'xs');
        border: 1px solid map-get-strict($token-variables, 'color', 'primary-very-dark');
      }

      tbody {
        tr {
          background-color: map-get-strict($token-variables, 'color', 'white');
        }

        tr:nth-child(even) {
          background-color: map-get-strict($token-variables, 'color', 'secondary-dark');
        }
      }
    }
  }
}

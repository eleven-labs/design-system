{"version":3,"file":"SystemPropsTable-8d549927.js","sources":["../../.storybook/components/SystemPropsTable/SystemPropsTable.tsx"],"sourcesContent":["import { linkTo } from '@storybook/addon-links';\nimport React from 'react';\n\nimport { Link, Text } from '@/components';\nimport { colorSystemProps, cssProperties, spacingSystemProps, tokenVariables } from '@/constants';\nimport { getLinkMdnByCssProperty } from '@/helpers/storybookHelper';\nimport { kebabCase } from '@/helpers/stringHelper';\nimport { SystemProps } from '@/types';\n\nimport { Table } from '../Table';\n\nexport interface SystemPropsTableProps {\n  title: string;\n  systemProps: Partial<Record<keyof SystemProps, readonly string[]>>;\n}\n\nconst getStoryTitleAndDesignTokenLabelByPropName = (\n  propName: keyof SystemProps\n): { storyTitle: string; designTokenLabel: string } | string => {\n  let designTokenName = kebabCase(propName) as keyof typeof tokenVariables | keyof typeof cssProperties;\n\n  if (Object.keys(colorSystemProps).includes(propName)) {\n    designTokenName = 'color';\n  }\n  if (Object.keys(spacingSystemProps).includes(propName) || ['gap', 'gapX', 'gapY'].includes(propName)) {\n    designTokenName = 'spacing';\n  }\n  if (['width', 'minWidth', 'maxWidth'].includes(propName)) {\n    designTokenName = 'width';\n  }\n  if (['height', 'minHeight', 'maxHeight'].includes(propName)) {\n    designTokenName = 'height';\n  }\n\n  if (propName === 'textSize') {\n    return {\n      storyTitle: 'Foundations/Design Tokens/Typography/Text',\n      designTokenLabel: 'Text Size Token',\n    };\n  }\n\n  if (['hiddenAbove', 'hiddenBelow'].includes(propName)) {\n    return {\n      storyTitle: 'Foundations/Design Tokens/Breakpoint',\n      designTokenLabel: 'Breakpoint Token',\n    };\n  }\n\n  switch (designTokenName) {\n    case 'color':\n      return {\n        storyTitle: 'Foundations/Design Tokens/Color',\n        designTokenLabel: 'Color Token',\n      };\n    case 'spacing':\n      return {\n        storyTitle: 'Foundations/Design Tokens/Spacing',\n        designTokenLabel: 'Spacing Token',\n      };\n    case 'text-transform':\n      return {\n        storyTitle: 'Foundations/Css Properties/Typography/TextTransform',\n        designTokenLabel: 'Text Transform Css Property',\n      };\n    case 'text-align':\n      return {\n        storyTitle: 'Foundations/Css Properties/Typography/TextAlign',\n        designTokenLabel: 'Text Align Css Property',\n      };\n    case 'font-weight':\n      return {\n        storyTitle: 'Foundations/Design Tokens/Typography/FontWeight',\n        designTokenLabel: 'Font Weight Token',\n      };\n    case 'display':\n      return {\n        storyTitle: 'Foundations/Css Properties/Layout/Display',\n        designTokenLabel: 'Display Token',\n      };\n    case 'width':\n      return {\n        storyTitle: 'Foundations/Design Tokens/Layout/Width',\n        designTokenLabel: 'Width Token',\n      };\n    case 'height':\n      return {\n        storyTitle: 'Foundations/Design Tokens/Layout/Height',\n        designTokenLabel: 'Height Token',\n      };\n    case 'align-content':\n      return {\n        storyTitle: 'Foundations/Css Properties/Layout/FlexBox/AlignContent',\n        designTokenLabel: 'Align Content Css Property',\n      };\n    case 'align-items':\n      return {\n        storyTitle: 'Foundations/Css Properties/Layout/FlexBox/AlignItems',\n        designTokenLabel: 'Align Items Css Property',\n      };\n    case 'align-self':\n      return {\n        storyTitle: 'Foundations/Css Properties/Layout/FlexBox/AlignSelf',\n        designTokenLabel: 'Align Self Css Property',\n      };\n    case 'flex-basis':\n      return {\n        storyTitle: 'Foundations/Css Properties/Layout/FlexBox/FlexBasis',\n        designTokenLabel: 'Flex Basis Css Property',\n      };\n    case 'flex-direction':\n      return {\n        storyTitle: 'Foundations/Css Properties/Layout/FlexBox/FlexDirection',\n        designTokenLabel: 'Flex Direction Css Property',\n      };\n    case 'flex-wrap':\n      return {\n        storyTitle: 'Foundations/Css Properties/Layout/FlexBox/FlexWrap',\n        designTokenLabel: 'Flex Wrap Css Property',\n      };\n    case 'justify-content':\n      return {\n        storyTitle: 'Foundations/Css Properties/Layout/FlexBox/JustifyContent',\n        designTokenLabel: 'Justify Content Css Property',\n      };\n  }\n\n  if (['italic', 'underline'].includes(propName)) {\n    return 'true | false';\n  }\n\n  return '--';\n};\n\nexport const SystemPropsTable: React.FC<SystemPropsTableProps> = ({ title, systemProps }) => (\n  <Table\n    title={title}\n    columns={[\n      {\n        name: 'propName',\n        label: 'Prop',\n      },\n      {\n        name: 'cssProperties',\n        label: 'CSS Properties',\n      },\n      {\n        name: 'value',\n        label: 'Reference or value',\n      },\n    ]}\n    rows={Object.entries(systemProps).map(([propName, cssProperties]) => {\n      const value = getStoryTitleAndDesignTokenLabelByPropName(propName as keyof SystemProps);\n      return {\n        propName,\n        cssProperties: cssProperties.map((cssProperty, index) => (\n          <>\n            <Link href={getLinkMdnByCssProperty(cssProperty)} target=\"_blank\">\n              {cssProperty}\n            </Link>\n            {cssProperties.length - 1 !== index && <Text as=\"span\">, </Text>}\n          </>\n        )),\n        value:\n          typeof value !== 'string' ? <Link onClick={linkTo(value.storyTitle)}>{value.designTokenLabel}</Link> : value,\n      };\n    })}\n  />\n);\n"],"names":["getStoryTitleAndDesignTokenLabelByPropName","propName","designTokenName","kebabCase","colorSystemProps","spacingSystemProps","SystemPropsTable","title","systemProps","jsx","Table","cssProperties","value","cssProperty","index","jsxs","Fragment","Link","getLinkMdnByCssProperty","Text","linkTo"],"mappings":"4QAgBA,MAAMA,EACJC,GAC8D,CAC1D,IAAAC,EAAkBC,EAAUF,CAAQ,EAexC,GAbI,OAAO,KAAKG,CAAgB,EAAE,SAASH,CAAQ,IAC/BC,EAAA,UAEhB,OAAO,KAAKG,CAAkB,EAAE,SAASJ,CAAQ,GAAK,CAAC,MAAO,OAAQ,MAAM,EAAE,SAASA,CAAQ,KAC/EC,EAAA,WAEhB,CAAC,QAAS,WAAY,UAAU,EAAE,SAASD,CAAQ,IACnCC,EAAA,SAEhB,CAAC,SAAU,YAAa,WAAW,EAAE,SAASD,CAAQ,IACtCC,EAAA,UAGhBD,IAAa,WACR,MAAA,CACL,WAAY,4CACZ,iBAAkB,iBAAA,EAItB,GAAI,CAAC,cAAe,aAAa,EAAE,SAASA,CAAQ,EAC3C,MAAA,CACL,WAAY,uCACZ,iBAAkB,kBAAA,EAItB,OAAQC,EAAiB,CACvB,IAAK,QACI,MAAA,CACL,WAAY,kCACZ,iBAAkB,aAAA,EAEtB,IAAK,UACI,MAAA,CACL,WAAY,oCACZ,iBAAkB,eAAA,EAEtB,IAAK,iBACI,MAAA,CACL,WAAY,sDACZ,iBAAkB,6BAAA,EAEtB,IAAK,aACI,MAAA,CACL,WAAY,kDACZ,iBAAkB,yBAAA,EAEtB,IAAK,cACI,MAAA,CACL,WAAY,kDACZ,iBAAkB,mBAAA,EAEtB,IAAK,UACI,MAAA,CACL,WAAY,4CACZ,iBAAkB,eAAA,EAEtB,IAAK,QACI,MAAA,CACL,WAAY,yCACZ,iBAAkB,aAAA,EAEtB,IAAK,SACI,MAAA,CACL,WAAY,0CACZ,iBAAkB,cAAA,EAEtB,IAAK,gBACI,MAAA,CACL,WAAY,yDACZ,iBAAkB,4BAAA,EAEtB,IAAK,cACI,MAAA,CACL,WAAY,uDACZ,iBAAkB,0BAAA,EAEtB,IAAK,aACI,MAAA,CACL,WAAY,sDACZ,iBAAkB,yBAAA,EAEtB,IAAK,aACI,MAAA,CACL,WAAY,sDACZ,iBAAkB,yBAAA,EAEtB,IAAK,iBACI,MAAA,CACL,WAAY,0DACZ,iBAAkB,6BAAA,EAEtB,IAAK,YACI,MAAA,CACL,WAAY,qDACZ,iBAAkB,wBAAA,EAEtB,IAAK,kBACI,MAAA,CACL,WAAY,2DACZ,iBAAkB,8BAAA,CAExB,CAEA,MAAI,CAAC,SAAU,WAAW,EAAE,SAASD,CAAQ,EACpC,eAGF,IACT,EAEaK,EAAoD,CAAC,CAAE,MAAAC,EAAO,YAAAC,CACzE,IAAAC,EAACC,EAAA,CACC,MAAAH,EACA,QAAS,CACP,CACE,KAAM,WACN,MAAO,MACT,EACA,CACE,KAAM,gBACN,MAAO,gBACT,EACA,CACE,KAAM,QACN,MAAO,oBACT,CACF,EACA,KAAM,OAAO,QAAQC,CAAW,EAAE,IAAI,CAAC,CAACP,EAAUU,CAAa,IAAM,CAC7D,MAAAC,EAAQZ,EAA2CC,CAA6B,EAC/E,MAAA,CACL,SAAAA,EACA,cAAeU,EAAc,IAAI,CAACE,EAAaC,IAE3CC,EAAAC,EAAA,CAAA,SAAA,CAAAP,EAACQ,GAAK,KAAMC,EAAwBL,CAAW,EAAG,OAAO,SACtD,SACHA,EAAA,EACCF,EAAc,OAAS,IAAMG,KAAUK,EAAK,CAAA,GAAG,OAAO,SAAE,IAAA,CAAA,CAAA,CAAA,CAC3D,CACD,EACD,MACE,OAAOP,GAAU,SAAYH,EAAAQ,EAAA,CAAK,QAASG,EAAOR,EAAM,UAAU,EAAI,SAAAA,EAAM,gBAAiB,CAAA,EAAUA,CAAA,CAC3G,CACD,CAAA,CACH"}
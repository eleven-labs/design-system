{"version":3,"file":"Color.stories-b32b1f5e.js","sources":["../../src/documentations/Foundations/DesignTokens/Color.stories.mdx"],"sourcesContent":["import { Meta } from '@storybook/addon-docs';\nimport { Layout, Table } from '@storybook-components';\nimport { Box, Text } from '@/components';\nimport { tokenVariables } from '@/constants';\nimport { capitalize } from '@/helpers/stringHelper';\n\n<Meta\n    title=\"Foundations/Design Tokens/Color\"\n    parameters={{\n        viewMode: 'docs',\n        previewTabs: {\n            canvas: { hidden: true }\n        },\n        backgrounds: {\n            disable: true,\n            grid: {\n                disable: true,\n            }\n        },\n    }}\n/>\n\n<Layout\n    title=\"Color\"\n    description=\"Color palettes used by both design and engineering\"\n>\n    {Object.entries(tokenVariables.color).map(([categoryKey, tokenColorsByCategory]) => (\n        <Table\n            key={categoryKey}\n            title={capitalize(categoryKey)}\n            columns={[\n                {\n                    name: 'name',\n                    label: 'Name',\n                },\n                {\n                    name: 'preview',\n                    label: 'Preview',\n                },\n                {\n                    name: 'value',\n                    label: 'Value',\n                },\n                {\n                    name: 'usage',\n                    label: 'Usage',\n                },\n            ]}\n            rows={Object.entries(tokenColorsByCategory).map(([tokenName, token]) => ({\n                name: (\n                    <Text\n                        fontWeight=\"medium\"\n                    >\n                        {tokenName}\n                    </Text>\n                ),\n                preview: (\n                    <Box\n                        bg={tokenName}\n                        style={{\n                            boxSizing: 'border-box',\n                            width: '200px',\n                            height: '50px'\n                        }}\n                    />\n                ),\n                value: token.value,\n                usage: token.description,\n            }))}\n        />\n    ))}\n</Layout>\n"],"names":["MDXContent","props","MDXLayout","_provideComponents","_jsx","_createMdxContent","_jsxs","_Fragment","Meta","Layout","tokenVariables","categoryKey","tokenColorsByCategory","Table","capitalize","tokenName","token","Text","Box","__page","componentMeta","__namedExportsOrder"],"mappings":"i4BAUA,SAASA,EAAWC,EAAQ,GAAI,CAC9B,KAAM,CACJ,QAASC,CACb,EAAM,OAAO,OAAO,CAAE,EAAEC,EAAkB,EAAIF,EAAM,UAAU,EAC5D,OAAOC,EAAyBE,EAAAA,IAAKF,EAAW,CAAE,GAAGD,EACnD,SAAuBG,EAAAA,IAAKC,EAAmB,EAAE,CACrD,CAAG,EAAIA,EAAiB,EAEtB,SAASA,GAAoB,CAC3B,OAAoBC,EAAAA,KAAMC,EAAAA,SAAW,CACnC,SAAU,CAAcH,EAAI,IAACI,EAAM,CACjC,MAAO,kCACP,WAAY,CACV,SAAU,OACV,YAAa,CACX,OAAQ,CACN,OAAQ,EACT,CACF,EACD,YAAa,CACX,QAAS,GACT,KAAM,CACJ,QAAS,EACV,CACF,CACF,CACT,CAAO,EAAG;AAAA,EAAmBJ,EAAI,IAACK,EAAQ,CAClC,MAAO,QACP,YAAa,qDACb,SAAU,OAAO,QAAQC,EAAe,KAAK,EAAE,IAAI,CAAC,CAACC,EAAaC,CAAqB,IAAmBR,EAAAA,IAAKS,EAAO,CACpH,MAAOC,EAAWH,CAAW,EAC7B,QAAS,CAAC,CACR,KAAM,OACN,MAAO,MACnB,EAAa,CACD,KAAM,UACN,MAAO,SACnB,EAAa,CACD,KAAM,QACN,MAAO,OACnB,EAAa,CACD,KAAM,QACN,MAAO,OACnB,CAAW,EACD,KAAM,OAAO,QAAQC,CAAqB,EAAE,IAAI,CAAC,CAACG,EAAWC,CAAK,KAAO,CACvE,KAAmBZ,EAAI,IAACa,EAAM,CAC5B,WAAY,SACZ,SAAUF,CACxB,CAAa,EACD,QAAsBX,EAAI,IAACc,EAAK,CAC9B,GAAIH,EACJ,MAAO,CACL,UAAW,aACX,MAAO,QACP,OAAQ,MACT,CACf,CAAa,EACD,MAAOC,EAAM,MACb,MAAOA,EAAM,WACzB,EAAY,CACH,EAAEL,CAAW,CAAC,CACvB,CAAO,CAAC,CACR,CAAK,CACF,CACH,CAIY,MAACQ,EAAS,IAAM,CAC1B,MAAM,IAAI,MAAM,iBAAiB,CACnC,EACAA,EAAO,WAAa,CAClB,SAAU,EACZ,EACK,MAACC,EAAgB,CACpB,MAAO,kCACP,WAAY,CACV,SAAU,OACV,YAAa,CACX,OAAQ,CACN,OAAQ,EACT,CACF,EACD,YAAa,CACX,QAAS,GACT,KAAM,CACJ,QAAS,EACV,CACF,CACF,EACD,KAAM,CAAC,aAAa,EACpB,eAAgB,CAAC,QAAQ,CAC3B,EACAA,EAAc,WAAaA,EAAc,YAAc,GACvDA,EAAc,WAAW,KAAO,CAAE,GAAIA,EAAc,WAAW,MAAQ,GACrE,KAAMpB,CACR,EAC4B,MAAAqB,EAAA,CAAA,QAAA"}
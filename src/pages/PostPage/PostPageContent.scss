@use 'sass:map';
@use '@/styles/abstracts' as *;

$heading-markup-config: map-get-strict($token-variables, 'typography', 'heading-markup');
$heading-markup-desktop-config: map-get-strict($token-variables, 'desktop', 'typography', 'heading-markup');
$headings-by-compoent-variant-name: (
    's': 'h5',
    'm': 'h4',
    'l': 'h3',
    'xl': 'h2',
);

@mixin heading($config) {
  $base-properties: ();

  @if map.get($config, 'base') {
    $base-properties: map.get($config, 'base');
  }

  @each $component-variant-name, $properties in $config {
    @if $component-variant-name != 'base' {
      #{map-get-strict($headings-by-compoent-variant-name, $component-variant-name)} {
        @each $property-name, $property-value in map.merge($base-properties, $properties) {
          #{$property-name}: #{$property-value};
        }
      }
    }
  }
}

.post-page-content {
  --height-cover-post-page: 160px;

  &__cover {
    margin-top: #{map-get-strict($token-variables, 'spacing', 's')};
    object-fit: cover;
    width: 100%;
    height: var(--height-cover-post-page);
    border-radius: #{map-get-strict($token-variables, 'radius', 'xs')};

    @include create-media-queries('md') {
      --height-cover-post-page: 335px;
    }
  }

  @include heading($heading-markup-config);

  @include create-media-queries('md') {
    @include heading($heading-markup-desktop-config);
  }

  p {
    margin-bottom: #{map-get-strict($token-variables, 'spacing', 'xs')};
  }
}

@use 'sass:map';
@use 'abstracts' as *;

// Variables for flex and grid
$align-items-list: (
  'start': 'flex-start',
  'end': 'flex-end',
  'center': 'center',
  'baseline': 'baseline',
  'stretch': 'stretch',
);

$align-content-list: (
  'start': 'flex-start',
  'end': 'flex-end',
  'center': 'center',
  'between': 'space-between',
  'around': 'space-around',
  'evenly': 'space-evenly',
  'stretch': 'stretch',
);

$align-self-list: (
  'auto': 'auto',
  'start': 'flex-start',
  'end': 'flex-end',
  'center': 'center',
  'stretch': 'stretch',
  'baseline': 'baseline'
);

$justify-content-list: (
  'start': 'flex-start',
  'end': 'flex-end',
  'center': 'center',
  'between': 'space-between',
  'around': 'space-around',
  'evenly': 'space-evenly',
  'stretch': 'stretch',
);

// Variables for flex
$flex-direction-list: (
  'column': 'column',
  'row': 'row',
  'column-reverse': 'column-reverse',
  'row-reverse': 'row-reverse',
);

$flex-basis-list: ('auto', 0, 25, 33, 50, 75, 100);

$flex-wrap-list: ('wrap', 'wrap-reverse', 'no-wrap');

@mixin flex($modifier) {
  .flex\@#{$modifier} {
    display: flex;
  }
}

@mixin inline-flex($modifier) {
  .inline-flex\@#{$modifier} {
    display: inline-flex;
  }
}

@mixin align-items($name, $property-css, $modifier) {
  .items-#{$name}\@#{$modifier} {
    align-items: #{$property-css};
  }
}

@mixin align-content($name, $property-css, $modifier) {
  .content-#{$name}\@#{$modifier} {
    align-content: #{$property-css};
  }
}

@mixin align-self($name, $property-css, $modifier) {
  .self-#{$name}\@#{$modifier} {
    align-self: #{$property-css};
  }
}

@mixin justify-content($name, $property-css, $modifier) {
  .justify-#{$name}\@#{$modifier} {
    justify-content: #{$property-css};
  }
}

@mixin gap($name, $size, $modifier) {
  .gap-#{$name}\@#{$modifier} {
    gap: #{$size};
  }
}

@mixin gap-row($name, $size, $modifier) {
  .gap-y-#{$name}\@#{$modifier} {
    row-gap: #{$size};
  }
}

@mixin gap-col($name, $size, $modifier) {
  .gap-y-#{$name}\@#{$modifier} {
    column-gap: #{$size};
  }
}

@mixin flex-direction($name, $property-css, $modifier) {
  .flex-#{$name}\@#{$modifier} {
    flex-direction: #{$property-css};
  }
}

@mixin flex-basis($name, $modifier) {
  .basis-#{$name}\@#{$modifier} {
    flex-basis: #{if(type-of($name) == 'string', $name, $name * 1%)};
  }
}

@mixin flex-wrap($name, $modifier) {
  .flex-wrap-#{$name}\@#{$modifier} {
    flex-wrap: #{$name};
  }
}

// Utilities for flex and grid
@each $breakpoint-name, $breakpoint-value in map.get($token-variables, 'breakpoint') {
  @include create-media-queries($breakpoint-name) {
    @each $name, $property-css in $align-items-list {
      @include align-items($name, $property-css, $breakpoint-name);
    }
    @each $name, $property-css in $align-content-list {
      @include align-content($name, $property-css, $breakpoint-name);
    }
    @each $name, $property-css in $align-self-list {
      @include align-self($name, $property-css, $breakpoint-name);
    }
    @each $name, $property-css in $justify-content-list {
      @include justify-content($name, $property-css, $breakpoint-name);
    }
    @each $name, $size in map.get($token-variables, 'spacing') {
      @include gap($name, $size, $breakpoint-name);
    }
    @each $name, $size in map.get($token-variables, 'spacing') {
      @include gap-row($name, $size, $breakpoint-name);
    }
    @each $name, $size in map.get($token-variables, 'spacing') {
      @include gap-col($name, $size, $breakpoint-name);
    }
  }
}

// Utilities for flex
@each $breakpoint-name, $breakpoint-value in map.get($token-variables, 'breakpoint') {
  @include create-media-queries($breakpoint-name) {
    @include flex($breakpoint-name);
    @include inline-flex($breakpoint-name);
    @each $name, $property-css in $flex-direction-list {
      @include flex-direction($name, $property-css, $breakpoint-name);
    }
    @each $name in $flex-basis-list {
      @include flex-basis($name, $breakpoint-name);
    }
    @each $name in $flex-wrap-list {
      @include flex-wrap($name, $breakpoint-name);
    }
  }
}
